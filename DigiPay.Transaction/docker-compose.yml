services:
  postgres:
    image: postgres:15
    container_name: digipay-transaction-postgres
    environment:
      POSTGRES_DB: digipay_transaction
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5434:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - digipay-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: digipay-transaction-rabbitmq
    ports:
      - "5673:5672"
      - "15673:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    restart: unless-stopped
    networks:
      - digipay-network

  api:
    build:
      context: .
      dockerfile: DigiPay.Transaction.Api/Dockerfile
    container_name: digipay-transaction-api
    ports:
      - "5002:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://*:80
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=digipay_transaction;Username=postgres;Password=postgres;CommandTimeout=120
      - RabbitMQ__HostName=rabbitmq
      - RabbitMQ__Port=5672
      - RabbitMQ__UserName=guest
      - RabbitMQ__Password=guest
      - RabbitMQ__VirtualHost=/
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    restart: unless-stopped
    networks:
      - digipay-network

volumes:
  postgres-data:
    name: digipay-transaction-postgres-data

networks:
  digipay-network:
    name: digipay-network
    external: true 